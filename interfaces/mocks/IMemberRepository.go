// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import models "go-mongo/models"

// IMemberRepository is an autogenerated mock type for the IMemberRepository type
type IMemberRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: payload
func (_m *IMemberRepository) Delete(payload models.MemberModel) (int, error) {
	ret := _m.Called(payload)

	var r0 int
	if rf, ok := ret.Get(0).(func(models.MemberModel) int); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.MemberModel) error); ok {
		r1 = rf(payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: payload
func (_m *IMemberRepository) GetAll(payload models.MemberModel) ([]models.MemberModel, error) {
	ret := _m.Called(payload)

	var r0 []models.MemberModel
	if rf, ok := ret.Get(0).(func(models.MemberModel) []models.MemberModel); ok {
		r0 = rf(payload)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.MemberModel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.MemberModel) error); ok {
		r1 = rf(payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Publish provides a mock function with given fields: payload
func (_m *IMemberRepository) Publish(payload models.MemberModel) (models.MemberModel, error) {
	ret := _m.Called(payload)

	var r0 models.MemberModel
	if rf, ok := ret.Get(0).(func(models.MemberModel) models.MemberModel); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(models.MemberModel)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.MemberModel) error); ok {
		r1 = rf(payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
